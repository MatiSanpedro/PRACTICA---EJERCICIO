from trabajo_matriz_funciones import * 

'''
vectores:
estados 
nombre
legajo
de 100 elementos

matriz de 100 por 3 elementos de números enteros, que van a representar las notas del curso de ingreso
ademas tendremos un vector de 100 elementos donde se cargaran los promedios de las tres notas
vector extra

calcular la suma / 3 


Menu de opciones:
1 - generar e inicializar los vectores y la matriz

2 - para cargar los datos: nombre
3 - cargar las notas en la matriz
4 - calcular y poblar los promedios
5 - buscar por promedio mayor o igual que el dato a buscar, y mostrar el listado de estudiantes que cumplen esa condicion
#buscar todos los estudiantes cuyo promedio es por ejemplo 7 o mayor que 7 

6 - Salir
'''
#resuelto esto armar una biblioteca llamada "practica, ejercicio"
#cada opcion del menu tiene que ser una funcion
#guardar esas funciones en la biblioteca 


#ejemplo : 
#nombres = ["gomez pedro","lopez adelina","sanchez juana"]
#notas = [[6,7,8], [7,6,5],[4,8,9],[8,1,3],[6,3,3]]

#promedios = [7, 6, 7]   




#matricia = iniciar_matriz(100,3,0)





def Menu_de_opciones(): #configure esto para que funcione con 5 y verificar errores 
    while True:         
        
        objeto = input("x---------Seleccione una opcion---------x \n  ¿Que desea realizar? \n 1 Iniciar matriz y vectores\n 2 cargar nombres \n 3 cargar notas \n 4 calcular promedios\n 5 Mostrar promedios mayor/es   \n 6 SALIR DEL PROGRAMA \n7  Reiniciar  \n           ")
        
        match objeto:
            case "1":  #iniciar matrices 
                nombres = iniciar_matriz(5,1,0)
                notas = iniciar_matriz(5,3,0)
                promedios = iniciar_matriz(5,3,0)
                legajos = iniciar_matriz(5,3,0)
                vector_extra = crear_lista(3)

            case "2":  #cargar nombres 
                nombres = cargar_matriz_secuencialmente_nombres(nombres)
                for i in range(len(nombres)):
                    for j in range(len(nombres[i])):
                        print(nombres[i][j], end = " | ")


            case "3":  #cargar notas, 3 notas x 5 conjuntos 
                notas = cargar_matriz_secuencialmente_numeros(notas)
                print(notas) 
                

            case "4": #calcular promedios 
                promedios = funcion_promedio_en_listas(notas)
                print(promedios)

            case "5":  #buscar el mayor o mas cercano 
                while True:
                    opciones_2 = input("|-------seleccione una opcion-------|\n 1-Buscar el promedio mayor \n 2 Buscar el promedio mayor mas cercano al numero ingresado \n3 Volver ")
                    match opciones_2:
                        case "1":
                            ubicar_mayor(promedios)
                        case "2":
                            numero = float((input("ingrese un numero ")))
                            mayor_o_igual_float_listas(promedios,numero)
                        case "3":
                            break
                            

            case "6":  #salir  
                print("Saliendo del programa ")
                False
                break   
            
            case "7":
                iniciar = Menu_de_opciones()
                print(iniciar)







iniciar = Menu_de_opciones()
print(iniciar)
